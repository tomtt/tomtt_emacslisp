(setq c-basic-offset 4)

;; Add the given path to the load-path variable.
(defun add-to-load-path (path-string)
  (message (format "Passed %S..." path-string))
  (if (stringp path-string)
      (when (file-exists-p path-string)
        (message (format "Adding %S to load-path..." path-string))
        (add-to-list 'load-path (expand-file-name path-string)))
    (crs-add-to-load-path (car path-string))
    (if (cdr path-string)
        (crs-add-to-load-path (cdr path-string)))))


;; Add ~/.emacs.d/ to the load-path if the directory exists
(if (file-exists-p (expand-file-name "~/.emacs.d"))
    (add-to-load-path (expand-file-name "~/.emacs.d")))

;; Add ~/.emacslisp/ to the load-path if the directory exists
(if (file-exists-p (expand-file-name "~/.emacslisp"))
    (add-to-load-path (expand-file-name "~/.emacslisp")))

;; Add ~/.emacslisp/python-mode to the load-path if the directory exists
(if (file-exists-p (expand-file-name "~/.emacslisp/python-mode"))
    (add-to-load-path (expand-file-name "~/.emacslisp/python-mode")))

;; Add ~/.emacslisp/rails to the load-path if the directory exists
(if (file-exists-p (expand-file-name "~/.emacslisp/rails"))
    (add-to-load-path (expand-file-name "~/.emacslisp/rails")))

;; Add ~/.emacslisp/color-theme to the load-path if the directory exists
(if (file-exists-p (expand-file-name "~/.emacslisp/color-theme"))
    (add-to-load-path (expand-file-name "~/.emacslisp/color-theme")))

(require 'php-mode)
(require 'javascript-mode)
(require 'python-mode)
(require 'ruby-mode)
(require 'inf-ruby)
(require 'snippet)
(require 'rails)
(require 'tomtt)

(defun try-complete-abbrev (old)
  (if (expand-abbrev) t nil))

(setq hippie-expand-try-functions-list
      '(try-complete-abbrev
        try-complete-file-name
        try-expand-dabbrev))


(add-to-list 'auto-mode-alist '("\\.js\\'" . php-mode))
(add-to-list 'auto-mode-alist '("\\.inc\\'" . php-mode))
(add-to-list 'auto-mode-alist '("\\.module\\'" . php-mode))
(add-to-list 'auto-mode-alist '("\\.rb\\'" . ruby-mode))
(add-to-list 'auto-mode-alist '("\\.rake\\'" . ruby-mode))
(add-to-list 'auto-mode-alist '("\\.rjs\\'" . ruby-mode))
(add-to-list 'auto-mode-alist '("\\.rhtml\\'" . ruby-mode))

(tool-bar-mode 0)
(menu-bar-mode 1)
(if (fboundp 'scroll-bar-mode) (scroll-bar-mode -1))
(add-hook 'emacs-lisp-mode-hook 'turn-on-font-lock)
(add-hook 'lisp-mode-hook 'turn-on-font-lock)
(add-hook 'java-mode-hook 'turn-on-font-lock)
(add-hook 'php-mode-hook 'turn-on-font-lock)
(add-hook 'python-mode-hook 'turn-on-font-lock)
(add-hook 'ruby-mode-hook 'turn-on-font-lock)
(add-hook 'sh-mode-hook 'turn-on-font-lock)

;; Ruby
(defun ruby-eval-buffer () (interactive)
   "Evaluate the buffer with ruby."
   (shell-command-on-region (point-min) (point-max) "ruby"))

(require 'color-theme)
(color-theme-initialize)
(color-theme-taming-mr-arneson)
