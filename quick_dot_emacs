;; Minimalistic dot-emacs file for quick startup

(defvar *emacs-load-start* (current-time))
(setq inhibit-splash-screen t)
(defconst win32p
    (eq system-type 'windows-nt)
  "Are we running on a WinTel system?")

(defconst cygwinp
    (eq system-type 'cygwin)
  "Are we running on a WinTel cygwin system?")

(defconst linuxp
    (or (eq system-type 'gnu/linux)
        (eq system-type 'linux))
  "Are we running on a GNU/Linux system?")

(defconst unixp
  (or linuxp
      (eq system-type 'usg-unix-v)
      (eq system-type 'berkeley-unix))
  "Are we running unix")

(defconst linux-x-p
    (and window-system linuxp)
  "Are we running under X on a GNU/Linux system?")

(defconst xemacsp (featurep 'xemacs)
  "Are we running XEmacs?")

(defconst emacs>=21p (and (not xemacsp) (or (= emacs-major-version 21) (= emacs-major-version 22)))
  "Are we running GNU Emacs 21 or above?")

;; Add the given path to the load-path variable.
(defun add-to-load-path (path-string)
  (message (format "Passed %S..." path-string))
  (if (stringp path-string)
      (when (file-exists-p path-string)
        (message (format "Adding %S to load-path..." path-string))
        (add-to-list 'load-path (expand-file-name path-string)))
    (crs-add-to-load-path (car path-string))
    (if (cdr path-string)
        (crs-add-to-load-path (cdr path-string)))))


(defun add-to-load-path-if-exists (dir)
     (if (file-exists-p (expand-file-name dir))
         (add-to-load-path (expand-file-name dir))))

(add-to-load-path-if-exists "~/.emacs.d")
(add-to-load-path-if-exists "~/.emacslisp")
(add-to-load-path-if-exists "~/.emacslisp/python-mode")
(add-to-load-path-if-exists "~/.emacslisp/rails")
(add-to-load-path-if-exists "~/.emacslisp/color-theme")
(add-to-load-path-if-exists "~/.emacslisp/semantic")
(add-to-load-path-if-exists "~/.emacslisp/eieio")
(add-to-load-path-if-exists "~/.emacslisp/speedbar")
(add-to-load-path-if-exists "~/.emacslisp/w3m")
(add-to-load-path-if-exists "~/.emacslisp/vm")
(add-to-load-path-if-exists "~/.emacslisp/ecb")
(add-to-load-path-if-exists "~/.emacslisp/muse")
(add-to-load-path-if-exists "~/.emacslisp/planner")
(add-to-load-path-if-exists "~/.emacslisp/remember")
(add-to-load-path-if-exists "~/.emacslisp/git-emacs")
(add-to-load-path-if-exists "~/.emacslisp/ruby")
(add-to-load-path-if-exists "~/.emacslisp/org")

(require 'browse-kill-ring)
(require 'anything)
(require 'ruby-mode)

(require 'git)

(setq ruby-electric-matching-delimeter-alist nil)
(setq auto-mode-alist
     (cons '("\\.css\\'" . css-mode) auto-mode-alist))
(setq cssm-indent-function #'cssm-c-style-indenter)
(global-set-key "\C-c\C-f" 'anything)

(ido-mode t)
;;(setq ido-enable-prefix nil)
(setq ido-enable-flex-matching t)

(setq c-basic-offset 4)

(defun try-complete-abbrev (old)
  (if (expand-abbrev) t nil))

(setq hippie-expand-try-functions-list
      '(try-complete-abbrev
        try-complete-file-name
        try-expand-dabbrev))

(add-to-list 'auto-mode-alist '("\\.rb\\'" . ruby-mode))
(add-to-list 'auto-mode-alist '("\\.rake\\'" . ruby-mode))
(add-to-list 'auto-mode-alist '("\\.rjs\\'" . ruby-mode))
(add-to-list 'auto-mode-alist '("\\.rhtml\\'" . ruby-mode))
(add-to-list 'auto-mode-alist '("\\.erb\\'" . ruby-mode))
(add-to-list 'auto-mode-alist '("\\.dryml\\'" . ruby-mode))
(add-to-list 'auto-mode-alist '("sake\\'" . ruby-mode))
(add-to-list 'auto-mode-alist '("\\dot_emacs\\'" . emacs-lisp-mode))

(tool-bar-mode 0)
(menu-bar-mode 1)
(if (fboundp 'scroll-bar-mode) (scroll-bar-mode -1))
(global-font-lock-mode t)

;; Ruby
(defun ruby-eval-buffer () (interactive)
   "Evaluate the buffer with ruby."
   (shell-command-on-region (point-min) (point-max) "ruby"))

(require 'color-theme)
;;(color-theme-initialize)

(custom-set-variables
  ;; custom-set-variables was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 '(ecb-options-version "2.32")
 '(org-agenda-files (quote ("~/created/org/todo.org")))
 '(org-agenda-ndays 7)
 '(org-agenda-show-all-dates t)
 '(org-agenda-skip-deadline-if-done t)
 '(org-agenda-skip-scheduled-if-done t)
 '(org-agenda-start-on-weekday nil)
 '(org-deadline-warning-days 14)
 '(org-default-notes-file "~/created/org/notes.org")
 '(org-reverse-note-order t))

(custom-set-faces
  ;; custom-set-faces was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 '(default ((t (:stipple nil :background "black" :foreground "#c0c0c0" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 100 :width normal))))
 '(flymake-errline ((((class color)) (:background "DarkRed"))))
 '(flymake-warnline ((((class color)) (:background "DarkBlue")))))

(define-key isearch-mode-map (kbd "C-o")
  (lambda ()
    (interactive)
    (let ((case-fold-search isearch-case-fold-search))
      (occur (if isearch-regexp isearch-string
               (regexp-quote isearch-string))))))

(require 'uniquify)
(setq uniquify-buffer-name-style 'reverse)
(setq uniquify-separator "|")
(setq uniquify-after-kill-buffer-p t) ; rename after killing uniquified
(setq uniquify-ignore-buffers-re "^\\*") ; don't muck with special buffers

(fset 'it-start
   [?\C-e ?  ?d ?o return ?e ?n ?d return ?\C-p tab ?\C-a return ?\C-p tab])
(fset 'it-pend
   [?\C-w return up tab ?p ?e ?d backspace ?n ?d ?i ?n ?g ?  ?d ?o return ?e ?n ?d ?\C-a tab ?\C-a return up ?\C-y escape ?\C-\\ ?\C-k ?\C-n ?\C-a ?\C-  ?\C-r ?p ?e ?n ?d ?i ?n ?g ?\C-a])
(fset 'it-unpend
   [?\C-w escape ?x ?s ?w ?i ?t ?c ?h ?- ?t ?o ?- ?b ?u ?f ?f ?e ?r return ?d ?o ?u ?n ?p ?e ?n ?d return ?\C-y up ?\C-k ?\C-k escape ?< ?\C-k ?\C-k ?\C-  escape ?> ?\C-w ?\C-x ?k return ?\C-y escape ?\C-\\])

(require 'ansi-color)

;;(message "bla1")
(defun mycolor ()
  (interactive)
  (load "color-theme-tomtt"))
(mycolor)
;;(message "bla2")

;; light
;(color-theme-high-contrast)

;; dark
;(color-theme-hober)

;; dark with green text
;(color-theme-euphoria)

;; dark bold constructs
;(color-theme-renegade)

;; because you cannea do C-x # on a uk mac in aquamacs
(global-set-key "\C-x\\" 'server-edit)

(message "My .emacs loaded in %ds" (destructuring-bind (hi lo ms) (current-time)
                                    (- (+ hi lo) (+ (first *emacs-load-start*) (second *emacs-load-start*)))))
